What happens when you initialize a repository? Why do you need to do it?
	A hidden folder is created called .git. This folder contains metadata on the project.
	You need to do this to enable tracking of the changes of this directory and children.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging holds the files you want to commit. You can group them before commiting by functional relations.
	Working dir has changes that are not commited and maybe never. Repository holds committed ones.

How can you use the staging area to make sure you have one commit per logical
change?
	only add the files of one logical change to staging area by using git diff to see difference between 
	working dir and staging. Then 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	When we want to add experimental/new features and want a stable version as well. This way we can develop on one branch
	and the rest can remain working

How do the diagrams help you visualize the branch structure?
	You can easily see the flow of the commits vs branches and what the relations are between those. Also unreachable branches can be easily identified

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	All data from two branches will be added in one working version. With the diagram you can see when what was added

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	Manually pros: more control, no loss of code
	Automatic: will do the obvious for you, faster